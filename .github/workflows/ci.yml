name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [master, development]
  pull_request:
    branches: [master, development]

jobs:
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio black flake8 mypy

      - name: 🎨 Code Formatting Check
        run: |
          black --check --diff src/ tools/

      - name: 🔍 Lint Code
        run: |
          flake8 src/ tools/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src/ tools/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

      - name: 🧪 Run Tests
        run: |
          pytest tests/ -v --cov=src --cov-report=xml --cov-report=html
        env:
          PYTHONPATH: ${{ github.workspace }}/src

      - name: 📊 Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: 🔒 Run Security Scan
        run: |
          pip install bandit safety
          bandit -r src/ -f json -o bandit-report.json || true
          safety check --json --output safety-report.json || true

      - name: 📊 Upload Security Reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json

  build:
    name: 🏗️ Build Check
    runs-on: ubuntu-latest
    needs: [test, security]

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🏗️ Test Import
        run: |
          cd src && python -c "
          import sys
          sys.path.insert(0, '.')
          try:
              from bot.main import bot
              from utils.audio_manager import AudioManager
              from utils.state_manager import StateManager
              print('✅ All imports successful')
          except Exception as e:
              print(f'❌ Import failed: {e}')
              sys.exit(1)
          "

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Production
        run: |
          echo "🚀 Deployment would happen here"
          echo "✅ Ready for production deployment"
